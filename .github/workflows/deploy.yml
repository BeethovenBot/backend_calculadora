name: Deploy Backend to EC2

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # (Opcional) Ejecuta tests antes de desplegar
      - name: Install deps & tests
        run: |
          npm ci
          npm test --if-present

      # Subir solo lo necesario al servidor (sin .git ni node_modules)
      - name: Deploy via rsync
        uses: burnett01/rsync-deployments@7.0.1
        with:
          switches: -avzr --delete --exclude=".git" --exclude="node_modules"
          path: "./"
          remote_path: "/home/ubuntu/backend"     # AJUSTA si usas otra ruta
          remote_host: ${{ secrets.EC2_HOST }}
          remote_user: ubuntu
          remote_key: ${{ secrets.EC2_SSH_KEY }}

      # Instalar en EC2, preparar env, PM2 (1 solo proceso), y smoke tests
      - name: Post-deploy on EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e

            cd /home/ubuntu/backend

            # PM2 instalado (si no lo está)
            command -v pm2 >/dev/null 2>&1 || sudo npm i -g pm2

            # .env desde secret (opcional)
            if [ -n "${{ secrets.BACKEND_ENV_FILE }}" ]; then
              echo "${{ secrets.BACKEND_ENV_FILE }}" > .env
            fi
            # Asegura el puerto por si tu .env no lo define
            grep -q '^PORT=' .env 2>/dev/null || echo 'PORT=3500' >> .env

            # Dependencias y build (si aplica)
            npm ci
            npm run build --if-present

            # Evita duplicados: elimina procesos con otros nombres
            pm2 delete calculadora >/dev/null 2>&1 || true

            # Inicia o recarga SIEMPRE el mismo proceso y entry file
            if pm2 describe backend-mozart >/dev/null 2>&1; then
              pm2 reload backend-mozart
            else
              pm2 start index.js --name backend-mozart --cwd /home/ubuntu/backend
            fi

            # Guarda la lista para que resucite tras reboot
            pm2 save

            # Smoke test local (directo al Node en 127.0.0.1:3500)
            curl -sf http://127.0.0.1:3500/health >/dev/null

      # Smoke test público (vía Nginx en 80/443). Usa IP o dominio en EC2_HOST.
      - name: Public healthcheck
        run: curl -sf "http://${{ secrets.EC2_HOST }}/health" >/dev/null
